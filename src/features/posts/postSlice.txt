import { createSlice, nanoid } from '@reduxjs/toolkit';
import { sub } from 'date-fns';

const initialState = [
  {
    id: 1,
    title: 'Learning Redux Toolkit',
    content: 'I have heard good things',
    createdAt: sub(new Date(), { minutes: 10 }).toISOString(),
    reactions: {
      like: 0,
      wow: 0,
      heart: 0,
      rocket: 0,
    },
  },
  {
    id: 2,
    title: 'Slice',
    content: 'The more I say slice, the more i want pizza',
    createdAt: sub(new Date(), { minutes: 5 }).toISOString(),
    reactions: {
      like: 0,
      wow: 0,
      heart: 0,
      rocket: 0,
    },
  },
];

const postsSlice = createSlice({
  name: 'posts',
  initialState,
  reducers: {
    addPost: {
      reducer(state, action) {
        state.push(action.payload);
      },
      // Prepare callback: Used for formatting action payload received in reducer
      prepare(title, content, userId) {
        return {
          payload: {
            id: nanoid(),
            title,
            content,
            createdAt: new Date().toISOString(),
            userId,
            reactions: {
              like: 0,
              wow: 0,
              heart: 0,
              rocket: 0,
            },
          },
        };
      },
    },
    addReaction(state, action) {
      const { postId, reaction } = action.payload;
      const post = state.find(({ id }) => id === postId);
      if (post) {
        post.reactions[reaction]++;
      }
    },
  },
});

export const allPosts = state => state.posts;

export const { addPost, addReaction } = postsSlice.actions;

export default postsSlice.reducer;
